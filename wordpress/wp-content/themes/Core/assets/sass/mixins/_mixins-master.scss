// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
  font-size: ($sizeValue * 16) * 1px;
  font-size: $sizeValue * 1rem;
}
@mixin gutter($gutterWidth: 1rem) {
  & > *:not(:last-child) {
    margin-right: $gutterWidth;
  }
}

// Center block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Clearfix
@mixin clearfix() {
  content: "";
  display: table;
  table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
  clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
  width: map-get($columns, $numberColumns) -
    (($columns__margin * ($numberColumns - 1)) / $numberColumns);
}

@mixin img-shadow {
  -moz-box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.3);
  -webkit-box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.3);
  box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.3);
}

@mixin img-no-shadow {
  -moz-box-shadow: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

@mixin rounded-corners {
  -moz-border-radius: 50px;
  -webkit-border-radius: 50px;
  border-radius: 50px;
}

@mixin link-transition {
  -moz-transition: all 0.3s ease-in-out;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

@mixin clearfix {
  display: block;
  content: "";
  clear: both;
}

@mixin breakpoint($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@keyframes slideleft {
  from {
    left: 0%;
  }

  to {
    left: -100%;
  }
}

@keyframes slideright {
  from {
    left: -100%;
  }

  to {
    left: 0%;
  }
}

@keyframes opacity {
  from {
    opacity: 0%;
  }

  to {
    opacity: 1;
  }
}

@keyframes slide-down {
  0% {
    opacity: 0;
    transform: translateY(-100%);
  }
  100% {
    opacity: 0.9;
    transform: translateY(0);
  }
}
